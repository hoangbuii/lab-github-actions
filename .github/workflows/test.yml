# name: Continous Integration

# on:
#   push:
#     branches:
#       - '**'
# jobs:
#   build:
#     name: Build
#     runs-on:
#       - self-hosted
#       - k8s-runner
#     steps:
#       - name: Get Pods
#         run: |
#           set -ex
#           cd $HOME
#           wget https://dl.k8s.io/release/v1.26.0/bin/linux/arm64/kubectl
#           chmod +x ./kubectl
#           ./kubectl auth can-i get pods
#           ./kubectl get pods -A

name: Actions Runner Controller Demo
on:
#  workflow_dispatch:
  push:
     branches:
      - '**'

jobs:
  Prepare:
    # You need to use the INSTALLATION_NAME from the previous step
    runs-on: arc-runner-set
    steps:
      - name: Install kubectl
        run: |
          cd $HOME
          sudo apt-get update
          sudo apt-get install -y curl libcurl4
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
      - name: Install kubectl
        run: |
          curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          sudo chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo chmod 644 /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl
          kubectl version --client
      - name: Config kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.K8S_CONF }}" > ~/.kube/config
          export KUBECONFIG=~/.kube/config
          export PATH="/usr/bin/kubectl:$PATH"
          echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc
          kubectl get node
      - name: Install helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm
          helm list -A

      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Test Build
        run: |
          sed -i "s/<CONFIG_MASK>/$(echo -n ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} | base64)/g" helm-chart/kaniko/config.json
          echo -n ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} | base64
          cat helm-chart/kaniko/config.json
          


